(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-a460b214"],{"54d0":function(t,e,s){},bb51:function(t,e,s){"use strict";s.r(e);var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"home"},[s("h1",[t._v("模拟面试")]),s("div",{staticClass:"main"},[s("div",{staticClass:"choiceQuestion"},[s("el-select",{attrs:{placeholder:"请选择问题范围"},on:{change:t.changeQuestionList},model:{value:t.choiceQuestion,callback:function(e){t.choiceQuestion=e},expression:"choiceQuestion"}},t._l(t.questionData,(function(t,e){return s("el-option",{key:e,attrs:{label:t.name,value:t.name}})})),1),s("el-button",{staticClass:"reset",attrs:{type:"warning",round:""},on:{click:t.reset}},[t._v("重置")])],1),s("div",{staticClass:"questionTitle"},[s("h2",[t._v("请简单介绍一下")]),s("p",[t._v(t._s(t.showQuestion.Q))]),s("el-button",{staticClass:"nextQuestion",attrs:{type:"primary",round:""},on:{click:t.randomQuestion}},[t._v("下一题")])],1),s("div",{staticClass:"questionAnswer"},[s("el-button",{attrs:{type:"primary",round:""},on:{click:function(e){t.showAnswerFlag=!0}}},[t._v("查看答案")]),t.showAnswerFlag?s("p",[t._v(t._s(t.showQuestion.A))]):t._e()],1)])])},o=[],n={name:"Home",data(){return{choiceQuestion:"",questionData:[],questionList:[],showQuestion:{},showAnswerFlag:!1,backupsData:[{name:"Html、Css",question:[{Q:"H5的新特性",A:"语义化标签有:header,footer,aside,nav等。还有在音频audio和视频video方面的改进。本地存储localStorage和SessionStorage以及拖拽draggable"},{Q:"C3的新特性",A:"新增圆角(border-radius)、过渡(transition)、位移(translate)、边框阴影(box-shadow)等"},{Q:"CSS的四种定位",A:"Static:元素的默认定位方式。Relative：相对定位方式，相对于其父级元素进行定位。Absolute：就是相对于父元素的非默认定位元素位置定位，这个会脱离标准流。Fixed：相对于浏览器窗口定位的，这个会脱离标准流"},{Q:"CSS盒模型",A:"W3C 标准盒模型：属性width,height只包含内容content，不包含border和padding。IE 盒模型：属性width,height包含border和padding，指的是content+padding+border"},{Q:"CSS权重计算",A:"内联样式>id选择器>类选择器>标签选择器、伪类选择器"},{Q:"CSS优化技巧",A:"1.合理使用选择器。2.减少DOM操作，减少重绘和重排。3.去除无效的选择器。4.文件压缩。5.异步加载文件。6.减少@import的使用"},{Q:"px/em/rem/vh/vw的区别",A:"1.px像素。2.em是相对长度单位。3.rem是CSS3新增的一个相对单位，相对HTML根元素。4.vwcss3新单位，view width的简写，是指可视窗口的宽度。5.vhcss3新单位，view height的简写，是指可视窗口的高度"},{Q:"flex容器布局",A:"容器属性：flex-direction属性决定主轴的方向、flex-wrap属性决定是否换行、flex-flow属性是flex-direction属性和flex-wrap属性的简写形式、justify-content属性定义了项目在主轴上的对齐方式、align-items属性定义项目在交叉轴上如何对齐、align-content属性定义了多根轴线的对齐方式。"},{Q:"BFC/IFC",A:'BFC（Block Formatting Context）叫做“块级格式化上下文"。IFC（inline Formatting Context）叫做“行级格式化上下”'}]},{name:"javaScript",question:[{Q:"js基本数据类型有什么",A:"null、undefined、string、number、boolean"},{Q:"js的引用类型有什么",A:"数组、对象、函数、日期、Math"},{Q:"数组常用的方法",A:"push、pop、shift、unshift、some、filter、map、forEach、splice、join、from、find……"},{Q:"字符串常用的方法",A:"substr、substring、split、concat……"},{Q:"什么是事件委托",A:"事件委托就是利用事件冒泡，只指定一个父类元素绑定事件，就可以管理所有子类元素。使用addEventListener完成事件委托"},{Q:"数组去重",A:"1.使用ES6的SET方法去重。2.for循环嵌套，splice去重。3.indexOf。4.递归。5.filter"},{Q:"如何区分数组和对象",A:"1.使用instanceof。2.使用Array.isArray方法。3.使用constructor"},{Q:"原型以及原型链",A:"1.每个对象都拥有一个隐藏的属性 __ proto __，指向它的原型对象。2.原型对象默认拥有一个 constructor 属性，指向指向它的那个构造函数。3.每一个构造函数都拥有一个 prototype 属性，此属性指向一个对象，也就是原型对象。4.所有原型链的终点都是 Object 函数的 prototype 属性"},{Q:"闭包以及作用域",A:"闭包就是能够读取其他函数内部变量的函数。在需要获取函数内部变量时使用闭包。作用：可以访问函数内部的变量，另一个就是让这些变量的值始终保持在内存中"},{Q:"怎么实现继承",A:"1.原型链继承：将父类的实例作为子类的原型  继承父类方法。2.构造继承：利用call或者apply把父类中通过this指定的属性和方法复制（借用）到子类创建的实例中。3.组合继承：通过调用父类构造，继承父类的属性并保留传参的优点，然后再通过将父类实例作为子类原型，实现函数复用。4.使用ES6关键字extends继承"},{Q:"你对this的理解",A:"1.全局环境this指向window。2.普通函数中this只想调用者。3.构造函数中this只想构造出来的新对象。4.call、apply、bind中指向第一个参数"},{Q:"call/apply/bind的区别",A:"1.call和apply调用结束自动执行。bind返回一个函数需要手动调用。apply的第二个参数是数组"}]},{name:"Ajax",question:[{Q:"Ajax的工作原理",A:"1. 创建xhr对象。2. 设置请求的方式和路径。3. 发送请求。4. 注册事件，获取响应内容。"},{Q:"跨域是怎么产生的、如何处理跨域问题",A:"只要协议，域名，端口号有一个不一样就是跨域。jsonp（只能处理git请求）、cors、服务端代理"},{Q:"get和post区别",A:"1.get请求携带的参数拼接到地址后面，post携带的参数在请求体中，post比git更为安全一些。2.get多用来获取数据，post用的比较多的是更新数据和表单提交。3.GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留"},{Q:"输入一个网址到页面渲染出来发生了什么在这期间",A:"1.查看本地是否有缓存，如果有缓存，走缓存，从缓存拿取数据，如果没有，先进行DNS域名解析，解析成对应的IP地址。2.通过三次握手客户端和服务端建立可靠的连接。3.可靠的连接建立之后，浏览器向服务端发送数据请求，等待服务端响应。4.服务器处理HTTP请求，返回响应。5.浏览器根据返回的响应，进行解析，渲染成HTML页面"}]},{name:"ES6",question:[{Q:"你对es6的理解",A:"1.增加了let和const命令，用来声明变量和常量。2.增加了块级作用域。3.新增了模板字符串。4.使用Promise处理异步操作。5.箭头函数"},{Q:"let、const和var的区别",A:"let有块级作用域、let没有变量提升、let不可重复定义、const不可修改"},{Q:"你对promise的理解",A:"1.异步的一种解决方案，解决了回调地狱的问题。2.对象的状态不受外界影响、一旦状态改变，就不会再变。3.resolve未完成=>成功、reject未完成=>失败"},{Q:"你对箭头函数的理解",A:"箭头函数更为简洁，并且没有自己的this、arguments、super等，所有不能作为构造函数"}]},{name:"VUE",question:[{Q:"vue的生命周期",A:"组件创建、数据初始化、挂载、更新、销毁组成生命周期。钩子函数有：beforeCreate、created、beforeMounted、mounted、beforeUpdate、update、beforeDestroy、destroyed、activated、deactivated"},{Q:"vue中组件传值",A:"props / $emit 适用 父子组件通信ref 与 children 适用 父子组件通信。EventBus （on） 适用于 父子、隔代、兄弟组件通信。a t t r s / attrs/attrs/listeners 适用于 隔代组件通信。provide / inject 适用于 隔代组件通信。Vuex 适用于 父子、隔代、兄弟组件通信"},{Q:"vueX",A:"集中式存储管理应用的所有组件的状态集中式存储管理应用的所有组件的状态。state：用于数据的存储，是store中的唯一数据源getters：如vue中的计算属性一样，基于state数据的二次包装，常用于数据的筛选和多个数据的相关性计算mutation：类似函数，改变state数据的唯一途径，且不能用于处理异步事件action：类似于mutation，用于提交mutation来改变状态，而不直接变更状态，可以包含任意异步操作modules：类似于命名空间，用于项目中将各个模块的状态分开定义和操作，便于维护"},{Q:"v-if和v-show区别",A:"v-if控制是否渲染这个标签。v-show通过控制Css样式控制显示和隐藏"},{Q:"路由守卫",A:"beforeEach:全局前置守卫接受to（目标路由）、from（离开的路由）、next（跳转方法）三个参数。afterEach：全局前置守卫。组件内的守卫"},{Q:"如何双向绑定、原理是什么",A:"在表单中使用v-model，绑定参数，绑定input事件、通过event参数拿到输入的值，再去修改绑定的参数"},{Q:"MVVM模式",A:"视图、模型分离，低耦合、可复用、独立开发特点"},{Q:"路由传参",A:"1.路由配置文件中配置参数，使用this.$route.params获取。2.使用path来匹配路由，然后通过query来传递参数，使用this.$route.query获取"},{Q:"watch和computed的区别",A:"computed是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值。watch是观察监听的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作。当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed。当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch"}]}]}},methods:{changeQuestionList(){this.questionList=this.questionData.filter(t=>t.name==this.choiceQuestion)[0].question,this.randomQuestion()},randomQuestion(){this.showAnswerFlag=!1;let t=this.questionList.length;if(this.showQuestion={},0==t)return void this.$message({type:"warning",message:"此类问题回答完毕，请选择其他类问题！"});let e=Math.floor(Math.random()*t);this.showQuestion=this.questionList[e],this.questionList.splice(e,1),console.log(this.backupsData)},reset(){this.questionData=JSON.parse(JSON.stringify(this.backupsData)),this.choiceQuestion=""}},mounted(){this.reset()},components:{}},a=n,r=(s("e14f"),s("2877")),c=Object(r["a"])(a,i,o,!1,null,"d0556a4e",null);e["default"]=c.exports},e14f:function(t,e,s){"use strict";s("54d0")}}]);
//# sourceMappingURL=chunk-a460b214.8f6228c6.js.map